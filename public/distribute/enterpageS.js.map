{"version":3,"file":"enterpageS.js","mappings":"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","sources":["webpack://foregor/./public/enter.ts","webpack://foregor/./public/src/AppConnect.ts","webpack://foregor/webpack/bootstrap","webpack://foregor/webpack/before-startup","webpack://foregor/webpack/startup","webpack://foregor/webpack/after-startup"],"sourcesContent":["import { TelegramWebApps } from 'telegram-webapps-types';\r\nimport { HOST, appcn } from './src/AppConnect';\r\n\r\n\r\n///////////////////////////////////////////////////\r\n\r\n\r\n// const teledata =  {  \r\n//         query_id: 'AAHrOrtzAAAAAOs6u3MMOL44',\r\n//         user: {\r\n//           id: 1941650155,\r\n//           first_name: 'Slava',\r\n//           last_name: '',\r\n//           username: 'Pwg90',\r\n//           language_code: 'ru',\r\n//           allows_write_to_pm: true,\r\n//           is_bot: true\r\n//         },\r\n//         auth_date: 1694156804,\r\n//         hash: 'edf8278eebeb8f35e9d7e162afaf7038743be156699cc05b62e6c02d49f05e92'\r\n//       }\r\n\r\n\r\n/////////////////////////////////////////////////////\r\n\r\ndeclare const window: {\r\n    Telegram: TelegramWebApps.SDK;\r\n  } & Window;\r\n\r\nwindow.Telegram.WebApp.ready();\r\nwindow.Telegram.WebApp.expand();\r\n\r\n(async () => {\r\n    // const initData = teledata;\r\n    const initData = Telegram.WebApp.initDataUnsafe || {};\r\n    const respdata = await appcn.sendTelegramData(initData) as {status: number, href: string}; \r\n    if (respdata.status > 0) {\r\n        window.location.href = HOST + respdata.href;\r\n    } else {\r\n        const henter = document.getElementById('henter');\r\n        const pwait = document.getElementById('pwait');\r\n        henter!.textContent = \"Доступ запрещен.\";\r\n        pwait!.textContent = \"Войдите через телеграм-бот.\"; \r\n    }\r\n\r\n})();\r\n\r\n","import { TelegramWebApps } from \"telegram-webapps-types\";\r\nimport { DoOprihod, TypeInputOprihod } from \"./types/TypesFrontend\";\r\n\r\n// const DEVHOST = 'https://foregor.vercel.app/';\r\nconst DEVHOST = '/';\r\nexport const HOST = DEVHOST;\r\n\r\n\r\nexport class AppConnect {\r\n\r\n    host = HOST;\r\n    constructor(host: string) {\r\n        this.host = host;\r\n    }\r\n\r\n    async getProdFolders(url: string) {\r\n        const resp = await fetch(this.host + url, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=utf-8' \r\n            },\r\n            body: JSON.stringify({})\r\n        });\r\n        return await resp.json();\r\n    }\r\n\r\n\r\n    async getExcelFile() {\r\n        try {\r\n            const resp = await fetch(this.host + 'getOprihodsExcel', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8' \r\n                },\r\n                body: JSON.stringify({})\r\n            });\r\n            const pathf = await resp.json() as {filePath: string};\r\n            return pathf.filePath;\r\n        } catch (e) { console.log('error AppConnect -> getExcelFile()') } \r\n        return null;    \r\n    }\r\n\r\n    // получить товары по pathName\r\n    async getProductByCats(url: string, uri: string) {\r\n        const requestData = {URISklad: uri};\r\n        const resp = await fetch(this.host+url, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(requestData)\r\n        });\r\n        const result = await resp.json();\r\n        return result;\r\n    }\r\n\r\n    // отправить форму оприход\r\n    async getRespSendFormDataOprihod(formData: FormData) {\r\n        const response = await fetch(this.host + 'formOprihod', {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        const result = await response.json();\r\n        \r\n        return result;\r\n    }\r\n\r\n\r\n    // Кнопка оприходовать\r\n    async doOprihod(data: DoOprihod) {\r\n        const response = await fetch(this.host + 'doOprihod', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n              },\r\n              body: JSON.stringify(data)\r\n        });\r\n        const result = await response.json();\r\n        \r\n        return result;\r\n    }\r\n\r\n    // получить таблицу добавленных продуктов\r\n    async getTableOprihod(): Promise<TypeInputOprihod> {\r\n        const response = await fetch(this.host + 'getTableOprihod', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n              },\r\n              body: JSON.stringify({})\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n\r\n\r\n    async deleteRow<T>(idrow: string): Promise<T> {\r\n        const response = await fetch(this.host + 'deleteRow', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n              },\r\n              body: JSON.stringify({delId: idrow})\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n\r\n\r\n    // получить списки цвет и название по pathName для select-ов\r\n    async getAttributesNameColorsByPathName(pathName: string) {\r\n        const reqData = {pathName: pathName};\r\n        const resp = await fetch(this.host + 'getAttrsByPath', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(reqData)\r\n        });\r\n        const result = await resp.json();\r\n        return result;\r\n    }\r\n\r\n    // отправка на сервер данных от телеграм /////тест\r\n    async sendTelegramData(data: TelegramWebApps.WebAppInitData) {\r\n        const resp = await fetch(this.host + 'fromTelegram', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n        const result = await resp.json();\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport const appcn = new AppConnect(HOST);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./public/enter.ts\");\n",""],"names":[],"sourceRoot":""}